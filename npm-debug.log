0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'git-control' ]
2 info using npm@1.3.11
3 info using node@v0.10.21
4 verbose cache add [ 'git-control', null ]
5 verbose cache add name=undefined spec="git-control" args=["git-control",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'git-control',
6 verbose parsed url   path: 'git-control',
6 verbose parsed url   href: 'git-control' }
7 silly lockFile f0488672-git-control git-control
8 verbose lock git-control /Users/sloth/.npm/f0488672-git-control.lock
9 silly lockFile f0488672-git-control git-control
10 silly lockFile f0488672-git-control git-control
11 verbose addNamed [ 'git-control', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 2d8ad6fb-git-control git-control@
14 verbose lock git-control@ /Users/sloth/.npm/2d8ad6fb-git-control.lock
15 silly addNameRange { name: 'git-control', range: '*', hasData: false }
16 verbose url raw git-control
17 verbose url resolving [ 'https://registry.npmjs.org/', './git-control' ]
18 verbose url resolved https://registry.npmjs.org/git-control
19 info trying registry request attempt 1 at 00:09:41
20 verbose etag "C89CJZH4KIYHAP1GWTGSY2ZDC"
21 http GET https://registry.npmjs.org/git-control
22 http 304 https://registry.npmjs.org/git-control
23 silly registry.get cb [ 304,
23 silly registry.get   { date: 'Wed, 14 May 2014 04:09:38 GMT',
23 silly registry.get     server: 'Apache',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     'last-modified': 'Wed, 14 May 2014 04:09:38 GMT',
23 silly registry.get     'cache-control': 'max-age=1',
23 silly registry.get     etag: '"C89CJZH4KIYHAP1GWTGSY2ZDC"',
23 silly registry.get     'x-served-by': 'cache-d45-DAL',
23 silly registry.get     'x-cache': 'MISS',
23 silly registry.get     'x-cache-hits': '0',
23 silly registry.get     'x-timer': 'S1400040578.949157000,VS0,VE42',
23 silly registry.get     vary: 'Accept',
23 silly registry.get     'content-length': '0',
23 silly registry.get     'keep-alive': 'timeout=10, max=50',
23 silly registry.get     connection: 'Keep-Alive' } ]
24 verbose etag git-control from cache
25 silly addNameRange number 2 { name: 'git-control', range: '*', hasData: true }
26 silly addNameRange versions [ 'git-control', [ '0.0.1', '0.0.3', '0.0.4', '0.0.5' ] ]
27 verbose addNamed [ 'git-control', '0.0.5' ]
28 verbose addNamed [ '0.0.5', '0.0.5' ]
29 silly lockFile b79adbc4-git-control-0-0-5 git-control@0.0.5
30 verbose lock git-control@0.0.5 /Users/sloth/.npm/b79adbc4-git-control-0-0-5.lock
31 silly lockFile b79adbc4-git-control-0-0-5 git-control@0.0.5
32 silly lockFile b79adbc4-git-control-0-0-5 git-control@0.0.5
33 silly lockFile 2d8ad6fb-git-control git-control@
34 silly lockFile 2d8ad6fb-git-control git-control@
35 silly resolved [ { name: 'git-control',
35 silly resolved     description: 'Git operations',
35 silly resolved     version: '0.0.5',
35 silly resolved     homepage: 'https://github.com/g13013/git-control',
35 silly resolved     author: { name: 'Aboubakr Gasmi', email: 'g13013@gmail.com' },
35 silly resolved     repository:
35 silly resolved      { type: 'git',
35 silly resolved        url: 'https://github.com/g13013/git-control.git' },
35 silly resolved     bugs: { url: 'https://github.com/g13013/git-control/issues' },
35 silly resolved     licenses: [ [Object] ],
35 silly resolved     main: 'lib/git-control',
35 silly resolved     engines: { node: '>= 0.8.0' },
35 silly resolved     scripts: { test: 'grunt' },
35 silly resolved     devDependencies:
35 silly resolved      { 'promised-io': '~0.3.4',
35 silly resolved        grunt: '~0.4.2',
35 silly resolved        'grunt-contrib-jshint': '~0.8.0',
35 silly resolved        'grunt-contrib-nodeunit': '~0.3.2',
35 silly resolved        'grunt-contrib-watch': '~0.5.3',
35 silly resolved        'jshint-stylish': '~0.1.5' },
35 silly resolved     keywords: [ 'git', 'basic', 'operations', 'promises' ],
35 silly resolved     readme: '# git-control (beta) [![Build Status](https://secure.travis-ci.org/g13013/git-control.png?branch=master)](http://travis-ci.org/g13013/git-control)\n\nA node module that helps you perform git operations on a repository. To start, all operations are build arround [Promises/A](http://wiki.commonjs.org/wiki/Promises/A) promises for asynchronious implementation, but there is a plan to support synchronious commands too.\n\n## Getting Started\nInstall the module with: `npm install git-control` and then:\n\n\tvar git = require(\'git-control\'),\n\tnewRepo =  git.repo({\n\t\tpath: \'../path/to/repo\', //default to \'.\'\n\t\tgitDir: \'../.git\', //default to path + \'/.git\',\n        workTree: \'path/to/work/tree\' // default to path\n\t});\n\n    newRepo.printInfo(); //output usefull information about the status.\n\n\n\n###Available commands\n* exec, main function that is used by all other commands, execute the given git command, ex: `repo.exec(\'status\');`\n* log\n* status\n* tag\n* submodule, (NOTE: exports also submodules, so if you have a submodule called `jquery` in your main repository `myLib`, you could access its `git-control` repository instance using `myLib.submodule.jquery`)\n* branch\n* fetch\n* checkout\n* pull\n* add\n* commit\n* printInfo\n\n## Documentation\n_(Coming soon)_\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n### TODO\n* Implement tests (in progress)\n* Support more operations\n* Support synchronious operations\n\n## License\nOriginally Written by [Aboubakr Gasmi](https://github.com/g13013/) and is licensed under the [MIT license](LICENSE.md)\n\n',
35 silly resolved     readmeFilename: 'README.md',
35 silly resolved     _id: 'git-control@0.0.5',
35 silly resolved     _from: 'git-control@' } ]
36 info install git-control@0.0.5 into /usr/local/lib
37 info installOne git-control@0.0.5
38 info /usr/local/lib/node_modules/git-control unbuild
39 info preuninstall git-control@0.0.5
40 info uninstall git-control@0.0.5
41 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild git-control@0.0.5
42 info postuninstall git-control@0.0.5
43 verbose tar unpack /Users/sloth/.npm/git-control/0.0.5/package.tgz
44 silly lockFile e71f310b-cal-lib-node-modules-git-control tar:///usr/local/lib/node_modules/git-control
45 verbose lock tar:///usr/local/lib/node_modules/git-control /Users/sloth/.npm/e71f310b-cal-lib-node-modules-git-control.lock
46 silly lockFile 8ace5c77-pm-git-control-0-0-5-package-tgz tar:///Users/sloth/.npm/git-control/0.0.5/package.tgz
47 verbose lock tar:///Users/sloth/.npm/git-control/0.0.5/package.tgz /Users/sloth/.npm/8ace5c77-pm-git-control-0-0-5-package-tgz.lock
48 silly gunzTarPerm modes [ '755', '644' ]
49 silly gunzTarPerm extractEntry package.json
50 silly gunzTarPerm extractEntry .npmignore
51 silly gunzTarPerm extractEntry README.md
52 silly gunzTarPerm extractEntry Gruntfile.js
53 silly gunzTarPerm extractEntry LICENSE-MIT
54 silly gunzTarPerm extractEntry .travis.yml
55 silly gunzTarPerm extractEntry git-control.sublime-project
56 silly gunzTarPerm extractEntry git-control.sublime-workspace
57 silly gunzTarPerm extractEntry lib/git-control.js
58 silly gunzTarPerm extractEntry lib/utils.js
59 silly gunzTarPerm extractEntry lib/utils/git-config-parser.js
60 silly gunzTarPerm extractEntry .jshintrc
61 silly gunzTarPerm extractEntry test/config_parser_test.js
62 silly gunzTarPerm extractEntry test/git_control_test.js
63 silly gunzTarPerm extractEntry test/sample_config
64 silly lockFile e71f310b-cal-lib-node-modules-git-control tar:///usr/local/lib/node_modules/git-control
65 silly lockFile e71f310b-cal-lib-node-modules-git-control tar:///usr/local/lib/node_modules/git-control
66 silly lockFile 8ace5c77-pm-git-control-0-0-5-package-tgz tar:///Users/sloth/.npm/git-control/0.0.5/package.tgz
67 silly lockFile 8ace5c77-pm-git-control-0-0-5-package-tgz tar:///Users/sloth/.npm/git-control/0.0.5/package.tgz
68 info preinstall git-control@0.0.5
69 verbose readDependencies using package.json deps
70 verbose readDependencies using package.json deps
71 silly resolved []
72 verbose about to build /usr/local/lib/node_modules/git-control
73 info build /usr/local/lib/node_modules/git-control
74 verbose linkStuff [ true,
74 verbose linkStuff   '/usr/local/lib/node_modules',
74 verbose linkStuff   true,
74 verbose linkStuff   '/usr/local/lib/node_modules' ]
75 info linkStuff git-control@0.0.5
76 verbose linkBins git-control@0.0.5
77 verbose linkMans git-control@0.0.5
78 verbose rebuildBundles git-control@0.0.5
79 info install git-control@0.0.5
80 info postinstall git-control@0.0.5
81 warn unmet dependency /usr/local/lib/node_modules/npm/node_modules/npm-install-checks requires npmlog@'0.0.6' but will load
81 warn unmet dependency /usr/local/lib/node_modules/npm/node_modules/npmlog,
81 warn unmet dependency which is version 0.0.4
82 warn unmet dependency /usr/local/lib/node_modules/npm/node_modules/npm-install-checks requires semver@'~2.2.1' but will load
82 warn unmet dependency /usr/local/lib/node_modules/npm/node_modules/semver,
82 warn unmet dependency which is version 2.1.0
83 error peerinvalid The package generator-karma does not satisfy its siblings' peerDependencies requirements!
83 error peerinvalid Peer generator-angular@0.5.1 wants generator-karma@~0.6.0
83 error peerinvalid Peer generator-go-angular@0.1.1 wants generator-karma@~0.5.0
84 error System Darwin 13.1.0
85 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install" "-g" "git-control"
86 error cwd /Users/sloth/repos/hoppingpenguin
87 error node -v v0.10.21
88 error npm -v 1.3.11
89 error code EPEERINVALID
90 verbose exit [ 1, true ]
